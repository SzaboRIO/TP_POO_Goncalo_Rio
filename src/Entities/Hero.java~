package Entities;

import Items.CombatConsumable;
import Items.Consumable;
import Items.Item;
import Items.MainWeapon;
import java.util.ArrayList;
import java.util.List;

public abstract class Hero {
    protected String name;
    protected int maxHp;
    protected int hp;
    protected int strength;
    protected int gold;
    protected MainWeapon mainWeapon;
    protected ArrayList<Item> inventory;
    protected ArrayList<Item> boughtItems;

    public Hero(String name, int hp, int strength, int gold, MainWeapon weapon) {
        this.name = name;
        this.maxHp = hp;
        this.hp = hp;
        this.strength = strength;
        this.gold = gold;
        this.mainWeapon = weapon;
        this.inventory = new ArrayList<>();
        this.boughtItems = new ArrayList<>();
    }

    public String getName() {
        return name;
    }

    public int getHp() {
        return hp;
    }

    public MainWeapon getMainWeapon() {
        return mainWeapon;
    }

    public void setMainWeapon(MainWeapon weapon) {
        this.mainWeapon = weapon;
    }

    public int getMaxHp() {
        return maxHp;
    }

    public void setMaxHp(int maxHp) {
        this.maxHp = maxHp;
    }

    public void setHp(int hp) {
        this.hp = hp;
    }

    public void setStrength(int strength) {
        this.strength = strength;
    }

    public boolean hasConsumables() {
        return !inventory.isEmpty();
    }

    public boolean hasCombatConsumables() {
        for (Item item : inventory) {
            if (item instanceof CombatConsumable) {
                return true;
            }
        }
        return false;
    }

    public int getStrength() {
        return strength;
    }

    public int getMoney() {
        return gold;
    }

    public void setMoney(int gold) {
        this.gold = gold;
    }

    public ArrayList<Item> getInventory() {
        return inventory;
    }

    public int getTotalAttackPower() {
        return strength + (mainWeapon != null ? mainWeapon.getAttackPower() : 0);
    }

    public void equipWeapon(MainWeapon weapon) {
        this.mainWeapon = weapon;
        if ("passive".equals(weapon.getSpecialEffectType())) {
            switch (weapon.getSpecialEffect()) {
                case "\uD83D\uDCAA\uD83D\uDC96 Enhances Strength and MaxHp":
                    this.strength += weapon.getEffectValue();
                    this.maxHp += weapon.getEffectValue();
                    break;
                case "\uD83D\uDCAA Enhances Strength":
                    this.strength += weapon.getEffectValue();
                    break;
            }
        }
    }

    public MainWeapon getEquippedWeapon() {
        return this.mainWeapon;
    }

    public void unequipWeapon(MainWeapon weapon) {
        if ("passive".equals(weapon.getSpecialEffectType())) {
            switch (weapon.getSpecialEffect()) {
                case "\uD83D\uDCAA\uD83D\uDC96 Enhances Strength and MaxHp":
                    this.strength -= weapon.getEffectValue();
                    this.maxHp -= weapon.getEffectValue();
                    if (this.hp > this.maxHp) {
                        this.hp = this.maxHp;
                    }
                    break;
                case "\uD83D\uDCAA Enhances Strength":
                    this.strength -= weapon.getEffectValue();
                    break;
            }
        }
    }

    public void addItemToInventory(Item item) {
        inventory.add(item);
    }

    public List<Item> getBoughtItems() {
        return boughtItems;
    }

    public void takeDamage(int damage) {
        this.hp -= damage;
        if (this.hp < 0) {
            this.hp = 0;
        }
    }
}